#include <iostream>





int main() {
	setlocale(0, "");
	int n, m;


	//Нейтральные указатели
	
	//int* pn1 = 0; //Способ первый (неактуальный, т.к. из языка С и обладает 1 проблемой)

	//int* pn2 = NULL; // способ второй (решает часть проблем, но все равно уже не актуален)



	int* pn3 = nullptr; // Способ третий (актуальный)

	if (pn3 != nullptr)
		std::cout << "pn3 = " << pn3 << std::endl;
	else
		std::cout << "Ошибка! Указатель не инициализирован!\n";
		*/


	//Типы констант указателей

	n = 7; m = 15;
	
	//Указатель на константу . Может быть объявлен без инициализации и может быть направлен на другую область памяти,
	// но с его помощью НЕЛЬЗЯ менять значения памяти, на которую он направлен

	const int* pointer1;
	pointer1 = &n;
	pointer1 = &m;

	//*pointer1 = 10; //ошибка!
	std::cout << *pointer1 << std::endl;


	// Константный указатель или указатель - константа.  Не может быть объявлен без инициализации, и не может быть перенаправлен на другую область памяти
	// но с его помощью можно менять значение памяти, на которую он направлен. 
	int* const pointer2 = &n;

	//pointer2 = &m; // Ошибка! 

	*pointer2 = 10;
	std::cout << n << std::endl;

	// Константный указатель на константу. Не может быть объявлен без инициализации и не может быть перенаправлен на другую область памяти.
	//С его помощью нельзя менять значения памяти, на которую он направлен.
	const int* const pointer3 = &n;
	//pointer3 = &m; //Ошибка!
	//*pointer3 = 42; //Ошибка!
	std::cout << *pointer3 << std::endl;












	return 0;
}